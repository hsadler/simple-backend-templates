# generated by datamodel-codegen:
#   filename:  openapi-schema.yaml
#   timestamp: 2025-07-29T11:35:18+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional
from uuid import UUID

from pydantic import BaseModel, Field


class Item(BaseModel):
    id: int = Field(..., example=1)
    uuid: UUID = Field(..., example='550e8400-e29b-41d4-a716-446655440000')
    created_at: datetime = Field(..., example='2021-01-01T00:00:00.000Z')
    name: str = Field(..., example='foo')
    price: float = Field(..., example=3.14)


class ItemIn(BaseModel):
    name: str = Field(..., example='foo')
    price: float = Field(..., example=3.14, ge=0.0)


class ItemStatus(Enum):
    created = 'created'
    fetched = 'fetched'
    updated = 'updated'
    deleted = 'deleted'


class ItemMeta(BaseModel):
    item_status: Optional[ItemStatus] = Field(None, example='created')


class ItemGetResponse(BaseModel):
    data: Item
    meta: ItemMeta


class ItemCreateRequest(BaseModel):
    data: ItemIn


class ItemCreateResponse(BaseModel):
    data: Item
    meta: ItemMeta


class ItemUpdateRequest(BaseModel):
    data: ItemIn


class ItemUpdateResponse(BaseModel):
    data: Item
    meta: ItemMeta


class ItemDeleteResponse(BaseModel):
    data: Item
    meta: ItemMeta


class PingResponse(BaseModel):
    message: str = Field(..., example='pong')


class ErrorResponse(BaseModel):
    error: str
