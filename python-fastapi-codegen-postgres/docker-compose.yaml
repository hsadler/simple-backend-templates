services:
  app:
    build:
      context: .
      target: development
    volumes:
      - ./src:/app/src
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/example_db
      DEBUG: "true"
      JSON_LOGGING: "false"
    ports:
      - "8000:8000"
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  db:
    image: postgres:15.3-alpine3.18
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=example_db
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d example_db" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"

  adminer:
    image: adminer
    ports:
      - 8080:8080

  gen-models:
    build:
      context: .
      target: development
    volumes:
      - ./src:/app/src
    command: >
      datamodel-codegen
        --input openapi-schema.yaml
        --input-file-type openapi
        --output src/models.py
        --target-python-version 3.13
        --field-constraints
        --output-model-type pydantic_v2.BaseModel

  pre-commit-runner:
    build:
      context: .
      target: development
    volumes:
      - ./src:/app/src
      - ./pyproject.toml:/app/pyproject.toml
    command: ["make", "lint", "pytest"]

volumes:
  db_data:
