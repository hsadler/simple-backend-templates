// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateItem implements createItem operation.
	//
	// Creates Item.
	//
	// POST /items
	CreateItem(ctx context.Context, req *CreateItemRequest) (CreateItemRes, error)
	// GetAllItems implements getAllItems operation.
	//
	// Returns all Items.
	//
	// GET /items/all
	GetAllItems(ctx context.Context, params GetAllItemsParams) (GetAllItemsRes, error)
	// GetItem implements getItem operation.
	//
	// Returns Item by id.
	//
	// GET /items/{id}
	GetItem(ctx context.Context, params GetItemParams) (GetItemRes, error)
	// GetItems implements getItems operation.
	//
	// Returns Items by ids. Only returns subset of Items found.
	//
	// GET /items
	GetItems(ctx context.Context, params GetItemsParams) (GetItemsRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
