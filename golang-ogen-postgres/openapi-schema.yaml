openapi: 3.0.3
info:
  title: Items API
  description: An example CRUD API for Items
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server

paths:
  /items:
    post:
      operationId: createItem
      description: Creates Item.
      requestBody:
        description: Item to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreateRequest'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCreateResponse'
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        'default':
          description: Unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /items/{itemId}:
    get:
      operationId: getItem
      summary: Get Item
      description: Returns a single Item by id.
      parameters:
        - name: itemId
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemGetResponse'
        '404':
          description: Not found.
        'default':
          description: Unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateItem
      summary: Update Item
      description: Updates a single Item by id.
      parameters:
        - name: itemId
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Item to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdateRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemUpdateResponse'
        '404':
          description: Not found.
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        'default':
          description: Unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteItem
      description: Deletes Item.
      parameters:
        - name: itemId
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDeleteResponse'
        '404':
          description: Not found.
        'default':
          description: Unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ping:
    get:
      operationId: ping
      description: Check if the service is running.
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        'default':
          description: Unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        created_at:
          type: string
          format: date-time
          example: 2021-01-01T00:00:00.000Z
        name:
          type: string
          example: foo
        price:
          type: number
          format: float
          example: 3.14
      required:
        - id
        - uuid
        - created_at
        - name
        - price

    ItemIn:
      type: object
      properties:
        name:
          type: string
          example: foo
        price:
          type: number
          format: float
          example: 3.14
          minimum: 0
      required:
        - name
        - price

    ItemMeta:
      type: object
      properties:
        item_status:
          type: string
          enum:
            - created
            - fetched
            - updated
            - deleted
          example: created

    ItemGetResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Item'
        meta:
          $ref: '#/components/schemas/ItemMeta'
      required:
        - data
        - meta

    ItemCreateRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ItemIn'
      required:
        - data

    ItemCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Item'
        meta:
          $ref: '#/components/schemas/ItemMeta'
      required:
        - data
        - meta

    ItemUpdateRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ItemIn'
      required:
        - data

    ItemUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Item'
        meta:
          $ref: '#/components/schemas/ItemMeta'
      required:
        - data
        - meta

    ItemDeleteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Item'
        meta:
          $ref: '#/components/schemas/ItemMeta'
      required:
        - data
        - meta

    PingResponse:
      type: object
      properties:
        message:
          type: string
          example: "pong"
      required:
        - message

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
      required:
        - error
